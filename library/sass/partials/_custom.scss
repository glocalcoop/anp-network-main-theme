// CUSTOM MIXINS
// check Bourbon first -- neat.bourbon.io/docs


// OMEGA RESET FOR BOURBON NEAT
// http://joshfry.me/notes/omega-reset-for-bourbon-neat/

@mixin omega-reset($nth) {
  &:nth-child(#{$nth}) { margin-right: flex-gutter($grid-columns, $gutter); }
  &:nth-child(#{$nth}+1) { clear: none }
}

// FONT SIZING
@mixin font-size($font-size: 16) {
  $rem-font-value: ($font-size / 16);
  // font-size: ($font-size * 1px);
  font-size: $rem-font-value + rem;
}


// RWD BREAKPOINTS 
// mobile first! so you only have to use floats etc in larger sizes
// set breakpoints where your content breaks, not particular devices

@mixin breakpoint($point) {
  @if $point == xs {
    @media screen and (min-width: $xs-screen)  { @content; } 
  }
  @if $point == sm {
    @media screen and (min-width: $sm-screen) { @content; }
  }
  @if $point == md {
    @media screen and (min-width: $md-screen) { @content; }
  }
  @if $point == lg {
    @media screen and (min-width: $lg-screen) { @content; }
  }
  @else if $point == xl {
    @media screen and (min-width: $xl-screen) { @content; }
  }
}


/**
 * Lists
 */
@mixin no-bullets() {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin inline-list() {
  @include no-bullets();
  li {
   display: inline-block; 
 }
}

@mixin inline-table-list() {
  @include no-bullets();
  display: table;
  li {
    display: table-cell;
  }
}

@mixin inline-flex-list($direction: row, $wrap: wrap, $align: space-between, $shrink: 1, $grow: 0, $context: auto) {
  @include no-bullets();
  display: flex;
  flex-wrap: $wrap;
  li {
    flex: $shrink $grow $context;
    margin-bottom: 1px;
    text-align: center;
    border-bottom: 1px solid rgba(0,0,0,.1);

    &:not(:last-child) {
      border-right: 1px solid rgba(0,0,0,.1);
    }

    a {
      display: block;
    }
  }
}

/**
 * Navigation
 */
@mixin tab-nav($color: $white, $bg-color: $default, $active-color: $white, $active-bg-color: $primary, $border-color: rgba(0,0,0,.1)) {
  ul {
    @include inline-list();
    width: 100%;

    li {
      a {
        display: block;
        padding: .25em .5em;
        background-color: $bg-color;
        color: $color;
        &:hover,
        &:focus {
          background-color: darken($bg-color, 20%);
        }

        &:not(:last-child) {
          border-right: 1px solid $border-color;
        }
      }

      &:active a,
      &.current a,
      &.selected a {
        background-color: $active-bg-color;
        color: $active-color;
      }
    }
  }
  
}

@mixin flex-tab-nav($color: $white, $bg-color: $default, $active-color: $white, $active-bg-color: $primary, $border-color: rgba(0,0,0,.1), $direction: row, $wrap: wrap, $align: space-between) {
  ul {
    @include inline-flex-list($direction, $wrap, $align);
    li {
      a {
        display: block;
        padding: .5em .75em;
        background-color: $bg-color;
        color: $color;
        &:hover,
        &:focus {
          background-color: darken($bg-color, 20%);
        }

        &:not(:last-child) {
          border-right: 1px solid rbga($bg-color,.1);
        }
      }

      &:active a,
      &.current a,
      &.selected a {
        background-color: $active-bg-color;
        color: $active-color;
      }

    }
  }
}

/**
 * Modules
 */
@mixin card($background: transparent, $border: rgba(0,0,0,.1), $color: $text-color) {
  border: 1px solid $border;
  padding: 0.4em 1.2em;
  background-color: $background;

  h3 {
    font-size: 85%;
    text-transform: uppercase;
    margin-bottom: .5em;
    color: $color;
    border-bottom: 1px solid rgba(0,0,0,.1);
  }
}

/**
 * Buttons
 */
@mixin button($font-size: $milli, $color: $white, $bg-color: $default) {

  @include transition(all 0.25s ease);
  @include font-size($font-size);
  text-transform: uppercase; 
  letter-spacing: $tracking-loose;
  line-height: 1.2;
  font-weight: 700;
  padding: .75em 3em;
  text-align: center;
  border: 0;
  background: $bg-color;
  color: $color !important;
  display: inline-block;
  border-radius: $base-border-radius;
  &:link,
  &:visited {
    color: $color !important;
  }
  &:hover,
  &:focus {
    background: lighten($bg-color, 10);
    color: $color !important;
  }
}

@mixin button-text($font-size: $milli, $color: $text-color, $icon: cog, $icon-color: $default) {

  font-size: 14px;
  @include font-size($font-size);
  font-weight: normal;
  color: $text-color !important;
  display: inline-block;
  vertical-align: middle;
  border-radius: 0;
  background: transparent;
  text-transform: none;
  letter-spacing: normal;
  line-height: inherit;
  padding: 0 .5em 0 0;
  &:link,
  &:visited  {
    color: $text-color;
  }
  &:hover,
  &:focus  {
    color: $anchor-color !important;
  }

  &:before {
    @extend %fa;
    @extend %fa-#{$icon};
    margin-right: 4px;
    color: $icon-color;
  }
}


@mixin button-icon($white: $white, $icon: cog, $background-color: $default) {
  @include button($color: $white, $bg-color: $background-color);
  
  &:before {
    @include font-icon-base();
    @extend %fa-#{$icon};
  }
}

@mixin button-group($border-color: $hr-alt, $background-color: $quiet-color, $active-color: $info, $radius: 3px) {

  a,
  .button-group-item {
    background-color: $background-color;
    border-right: $border-color;
    border-left: $border-color;
    border-radius: 0;
    color: $text-color;
    cursor: pointer;
    display: inline-block;
    font-size: $base-font-size;
    font-weight: normal;
    line-height: 1;
    padding: 0.75em 1em;
    width: 100%;

    @include media($lg-screen) {
      border-bottom: $border-color;
      border-left: 0;
      border-right: $border-color;
      border-top: $border-color;
      width: auto;
    }
    &:focus,
    &:hover {
      background-color: $info;
      color: $white;
    }
  }

  &:first-child .button-group-item,
  &:first-child a {
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
    border-top: $border-color;

    @include media($lg-screen) {
      border-bottom-left-radius: $radius;
      border-left: $border-color;
      border-top-left-radius: $radius;
      border-top-right-radius: 0;
    }
  }

  &:last-child .button-group-item,
  &:last-child a {
    border-bottom-left-radius: $radius;
    border-bottom-right-radius: $radius;
    border-bottom: $border-color;

    @include media($lg-screen) {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: $radius;
      border-right: $border-color;
      border-top-right-radius: $radius;
    }
  }

}

/**
 * Elements
 */
@mixin flip-button($color: $primary){
  background: $color;
  border-color: $color;
  color: $white !important;
  &:hover,
  &:focus {
    background: $bg-content;
    color: $color !important;
  }
}

@mixin badge($color: $default, $font-size: $nano) {
  @include font-size($font-size);
  background-color: $color;
  border-radius: 10px;
  color: $white;
  display: inline-block;
  line-height: 1;
  min-width: 10px;
  padding: 3px 7px;
}

/**
 * Utilities
 */
@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

// Hide/show with transition
// http://bitsofco.de/3-useful-reusable-sass-mixins/#hidingandshowingelementswithatransition
@mixin fade($type) {

  @if $type == 'hide' {
    visibility: hidden;
    opacity: 0;
    transition: visibility 1s, opacity 1s;
  }

  @else if $type == 'show' {
    visibility: visible;
    opacity: 1;
    transition: visibility 1s, opacity 1s;
  }

}

@mixin visuallyhidden() {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}


/**
 * Extends
 */
// for old markup w/clearfix class:
.clearfix:after {
  content: "";
  display: table;
  clear: both;
}

// for semantic markup, a la http://blog.teamtreehouse.com/a-better-clearfix-with-sass
%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// VISUALLY HIDE
%visuallyhidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}


// OVERFLOW FADES OUT
%overflow-fade {
  position: relative;
  &:after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 30px;
    @include linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1), $fallback: transparent);
  }
}

%button {
  @include button();
}

// button sizes

%button-large {
    @include font-size($delta);
    padding: 1em 3em;
}

%button-small {
    @include font-size($micro);
    padding: .25em 1em;
}

%info {
  @include font-size($micro);
  color: $medium-gray;
}

%meta {
  @include font-size($nano);
  color: $quiet-color;
  text-transform: uppercase;
  a {
    @include font-size($nano);
    color: $anchor-color;
  }
}

// FLEX BOX

%flexbox-container {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}


// STATES

%is-hidden {
  @extend %visuallyhidden;
}

%fullwidth { 
  width: 100%; 
}